import{a5 as o,k as d,x as l,X as t}from"#entry";const v=()=>{const a=o("auth.user",()=>null),r=o("auth.loading",()=>!1),n=d(()=>!!a.value),u=async()=>{try{r.value=!0;const s=await $fetch("/api/auth/me",{method:"GET"});return s&&s.user?(a.value=s.user,s.user):(a.value=null,null)}catch(s){return console.error("Failed to fetch user:",s),a.value=null,null}finally{r.value=!1}},c=async s=>{try{r.value=!0;const e=await $fetch("/api/auth/login",{method:"POST",body:s});return e&&e.success&&e.user?(a.value=e.user,console.log("Login Successful"),await t("/dashboard"),{success:!0}):{success:!1,message:e?.message||"Login failed"}}catch(e){return console.error("Login error:",e),{success:!1,message:e.data?.message||e.message||"Login failed"}}finally{r.value=!1}},i=async s=>{try{r.value=!0;const e=await $fetch("/api/auth/register",{method:"POST",body:s});return e&&e.success&&e.user?(a.value=e.user,await t("/dashboard"),{success:!0}):{success:!1,message:e?.message||"Registration failed"}}catch(e){return console.error("Registration error:",e),{success:!1,message:e.data?.message||e.message||"Registration failed"}}finally{r.value=!1}},g=async()=>{try{await $fetch("/api/auth/logout",{method:"POST"})}catch(s){console.error("Logout error:",s)}finally{a.value=null,await t("/login")}},f=async()=>a.value?a.value:await u(),h=()=>{a.value=null};return{user:l(a),isLoading:l(r),isLoggedIn:n,fetchUser:u,login:c,register:i,logout:g,initAuth:f,clearAuth:h}};export{v as u};
